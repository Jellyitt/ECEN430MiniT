<launch>
	<machine name="modesttrianglenuc" address="modesttrianglenuc-desktop" timeout="10" env-loader="/opt/ros/kinetic/env.sh" user="modesttrianglenuc"/>
	<machine name="modestLaptop" address="192.168.0.101" timeout="10" env-loader="/opt/ros/kinetic/env.sh" user="jonathan"/>

	<node machine="modesttrianglenuc" name="serial" pkg="rosserial_python" type="serial_node.py">
		<param name="port" value="/dev/ttyACM1"/>
		<param name="baud" value="57600"/>
	</node> 
	
  	<node machine="modesttrianglenuc" name="LIDAR" pkg="urg_node" type="urg_node" >				
		<param name="serial_port" value="/dev/ttyACM0"/>
	</node>

	<!--Transform setup -->
	<node machine="modesttrianglenuc" pkg="tf" type="static_transform_publisher" name="base_frame_2_camera_link" args="0.15 0 0.65 0 0 0 base_link camera_link 100"/> 
	<node machine="modesttrianglenuc" pkg="tf" type="static_transform_publisher" name="laser_link_2_camera_link" args="0.035 0.065 0.084 3.1416 3.1416 0 camera_link laser 100" />

	  <arg name="camera"          default="camera" />

	  <!-- Type of RealSense camera -->
	  <arg name="camera_type"     default="R200" />

	  <!-- "serial_no" or "usb_port_id" should be a unique identifier to connect to a device -->
	  <arg name="serial_no"     default="" />
	  <arg name="usb_port_id"   default="" /> <!-- USB "Bus#-Port#" -->

	  <!-- Best know configuration for generating depth registered point cloud. -->
	  <arg name="mode"            default="manual" />
	  <arg name="color_width"     default="640" />
	  <arg name="color_height"    default="480" />
	  <arg name="depth_width"     default="480" />
	  <arg name="depth_height"    default="360" />
	  <arg name="depth_fps"       default="30" />
	  <arg name="color_fps"       default="30" />

	  <!-- Arguments for remapping all device namespaces -->
	  <arg name="depth"            default="depth" />
	  <arg name="rgb"              default="rgb" />
	  <arg name="ir"               default="ir" />
	  <arg name="depth_registered" default="depth_registered" />
	  <arg name="projector"        default="projector" />

	  <!-- Size of message queue for synchronizing subscribed topics in depth_image_proc package.
	       Increase this value for higher resolution and/or frame rates.
	       If the depth_registered pointcloud topic generated by the depth_image_proc package does not contain data,
	       increase this value further. -->
	  <arg name="queue_size"       default="100" />
	  <param name="$(arg camera)/points_xyzrgb_sw_registered/queue_size" type="int" value="$(arg queue_size)" />

	  <!-- Optionally suppress loading the driver nodelet. Useful while playing back recorded raw data from a bag.-->
	  <arg name="load_driver"   default="true" />
	  <arg name="publish_tf"    default="true" />

	  <!-- Processing Modules -->
	  <arg name="rgb_processing"                  default="true"/>
	  <arg name="debayer_processing"              default="true" />
	  <arg name="ir_processing"                   default="true"/>
	  <arg name="depth_processing"                default="true"/>
	  <arg name="depth_registered_processing"     default="true"/>
	  <arg name="disparity_processing"            default="true"/>
	  <arg name="disparity_registered_processing" default="true"/>
	  <arg name="hw_registered_processing"        default="false" />
	  <arg name="sw_registered_processing"        default="true" />

	  <!-- Disable respawn topics by default -->
	  <arg name="respawn" default="false" />

	  <!-- Worker threads for the nodelet manager -->
	  <arg name="num_worker_threads" default="4" />

	  <!-- Push down all topics/nodelets into "camera" namespace -->
	  <group ns="$(arg camera)">

	    <!-- Start nodelet manager in provided namespace -->
	    <arg name="manager" value="$(arg camera)_nodelet_manager" />
	    <arg name="debug" default="false" /> <!-- Run manager in GDB? -->
	    <include file="$(find rgbd_launch)/launch/includes/manager.launch.xml">
	      <arg name="name"                value="$(arg manager)" />
	      <arg name="debug"               value="$(arg debug)" />
	      <arg name="num_worker_threads"  value="$(arg num_worker_threads)" />
	    </include>

	    <!-- Load driver -->
	    <include if="$(arg load_driver)"
		     file="$(find realsense_camera)/launch/includes/nodelet_rgbd.launch.xml">
	      <arg name="manager"                   value="$(arg manager)" />
	      <arg name="camera"                    value="$(arg camera)" />
	      <arg name="camera_type"               value="$(arg camera_type)" />
	      <arg name="serial_no"                 value="$(arg serial_no)" />
	      <arg name="usb_port_id"               value="$(arg usb_port_id)" />
	      <arg name="depth"                     value="$(arg depth)" />
	      <arg name="rgb"                       value="$(arg rgb)" />
	      <arg name="ir"                        value="$(arg ir)" />
	      <arg name="publish_tf"                value="$(arg publish_tf)" />
	      <arg name="mode"                      value="$(arg mode)" />
	      <arg name="depth_width"               value="$(arg depth_width)" />
	      <arg name="depth_height"              value="$(arg depth_height)" />
	      <arg name="color_width"               value="$(arg color_width)" />
	      <arg name="color_height"              value="$(arg color_height)" />
	      <arg name="depth_fps"                 value="$(arg depth_fps)" />
	      <arg name="color_fps"                 value="$(arg color_fps)" />
	    </include>

	    <!-- Load standard constellation of processing nodelets -->
	    <include file="$(find rgbd_launch)/launch/includes/processing.launch.xml">
	      <arg name="manager"                         value="$(arg manager)" />
	      <arg name="rgb"                             value="$(arg rgb)" />
	      <arg name="ir"                              value="$(arg ir)" />
	      <arg name="depth"                           value="$(arg depth)" />
	      <arg name="depth_registered"                value="$(arg depth_registered)" />
	      <arg name="projector"                       value="$(arg projector)" />
	      <arg name="respawn"                         value="$(arg respawn)" />
	      <arg name="rgb_processing"                  value="$(arg rgb_processing)" />
	      <arg name="debayer_processing"              value="$(arg debayer_processing)" />
	      <arg name="ir_processing"                   value="$(arg ir_processing)" />
	      <arg name="depth_processing"                value="$(arg depth_processing)" />
	      <arg name="depth_registered_processing"     value="$(arg depth_registered_processing)" />
	      <arg name="disparity_processing"            value="$(arg disparity_processing)" />
	      <arg name="disparity_registered_processing" value="$(arg disparity_registered_processing)" />
	      <arg name="hw_registered_processing"        value="$(arg hw_registered_processing)" />
	      <arg name="sw_registered_processing"        value="$(arg sw_registered_processing)" />
	    </include>

	  </group> <!-- camera -->



	<arg name="rate" default="5"/>
	<arg name="decimation" default="1" /> <!-- Reduce image size, e.g 2 maens width/2 x height/2 -->
	<arg name="approx_sync" default="true" />

	<!-- Use same nodelet used by realsense -->
	<group ns="camera">
		<node machine="modesttrianglenuc" pkg="nodelet" type="nodelet" name="data_throttle" args="load rtabmap_ros/data_throttle camera_nodelet_manager" output="screen">
			<param name="decimation" type="int" value="$(arg decimation)"/>
			<param name="approx_sync" type="bool" value="$(arg approx_sync)"/>
			
			<remap from="rgb/image_in" 	to="rgb/image_rect_color"/>
			<remap from="depth/image_in" 	to="depth_registered/image_raw"/>
			<remap from="rgb/camera_info_in" to="rgb/camera_info"/>
			
			<remap from="rgb/image_out"	to="data_throttled_image"/>
			<remap from="depth/image_out"	to="data_throttled_image_depth"/>
			<remap from="rgb/camera_info_out" to="data_throttled_camera_info"/>
		</node>
	</group>
</launch>
